buildscript {
    repositories {
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

plugins {
    id 'org.spongepowered.plugin' version '0.8.1'
    id 'net.minecrell.vanillagradle.server' version '2.2-5'
    id 'maven'
}

// Environment variables for the build set by the build server
ext.buildNumber = System.env.BUILD_NUMBER ?: '0'

defaultTasks 'clean', 'build'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

archivesBaseName = project.name.toLowerCase()

minecraft {
    version = project.minecraftVersion
    mappings = project.mcpMappings
}

version = "$minecraft.version-$project.version.$buildNumber"

dependencies {
    compile project(':CitizensAPI')
    compileOnly "org.spongepowered:spongecommon:$apiVersion:dev"
}

if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            // This is set by the build server when deploying to the repo
            if (project.hasProperty('spongeRepo')) {
                repository(url: project.spongeRepo) {
                    if (project.hasProperty('spongeUsername') && project.hasProperty('spongePassword')) {
                        authentication(userName: project.spongeUsername, password: project.spongePassword)
                    }
                }
            }

            pom {
                artifactId = project.archivesBaseName

                project {
                    name = project.archivesBaseName
                    description = project.description
                    packaging = 'jar'
                    url = project.url

                    scm {
                        url = "https://github.com/$project.organization/$project.name"
                        connection = "scm:git:https://github.com/$project.organization/${project.name}.git"
                        developerConnection = "scm:git:git@github.com:$project.organization/${project.name}.git"
                    }

                    issueManagement {
                        system = 'GitHub Issues'
                        url = "https://github.com/$project.organization/$project.name/issues"
                    }

                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'http://opensource.org/licenses/MIT'
                            distribution = 'repo'
                        }
                    }
                }
            }
        }
    }
}

// Configure changelog task only if we're on Forge's Jenkins server
if (project.hasProperty('forgeJenkinsPass')) {
    task changelog(type: JenkinsChangelog) {
        outputs.upToDateWhen {false} // Refresh changelog for every build

        serverRoot = 'http://ci.jenkins.minecraftforge.net/'
        jobName = 'citizens2'
        targetBuild = project.buildNumber
        authName = 'console_script'
        authPassword = project.forgeJenkinsPass
        output = "build/distributions/${project.name}-${project.version}-changelog.txt"
    }

    artifacts {
        archives changelog.output
    }

    uploadArchives.dependsOn 'changelog'
}
